// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"fmt"
	"github.com/quarkcms/quark-go/v2/pkg/app/admin/component/form/fields/selectfield"
	"github.com/quarkcms/quark-go/v2/pkg/dal/db"
	"time"
)

const TableNameAccount = "t_account"

// Account mapped from table <t_account>
type Account struct {
	Id            int64     `gorm:"column:id;type:int(8) unsigned;primaryKey;autoIncrement:true;comment:自增主键ID" json:"id"` // 自增主键ID
	Account       string    `gorm:"column:account;type:varchar(64);not null;comment:账号" json:"account"`                    // 账号
	Password      string    `gorm:"column:password;type:varchar(64);not null;comment:密码" json:"password"`                  // 密码
	AccountTypeId int64     `gorm:"column:account_type_id;type:int(8)" json:"account_type_id"`
	UserId        int64     `gorm:"column:user_id;type:int(8)" json:"user_id"`
	Token         string    `gorm:"column:token;type:varchar(255);comment:会话信息" json:"token"`        // 会话信息
	Status        int32     `gorm:"column:status;type:tinyint(4);not null;comment:状态" json:"status"` // 状态
	CreateTime    time.Time `gorm:"column:create_time;type:datetime;not null" json:"create_time"`
	UpdateTime    time.Time `gorm:"column:update_time;type:datetime;not null;default:CURRENT_TIMESTAMP" json:"update_time"`
}

// TableName Account's table name
func (*Account) TableName() string {
	return TableNameAccount
}

// 获取列表
func (p *Account) Options() (options []*selectfield.Option, Error error) {
	getList := []Account{}
	err := db.Client.Find(&getList).Error
	if err != nil {
		return options, err
	}

	for _, v := range getList {
		option := &selectfield.Option{
			Label: fmt.Sprintf("%v", v.Account),
			Value: v.UserId,
		}
		options = append(options, option)
	}
	return options, nil
}
