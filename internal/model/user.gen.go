// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"fmt"
	"github.com/quarkcms/quark-go/v2/pkg/app/admin/component/form/fields/selectfield"
	"github.com/quarkcms/quark-go/v2/pkg/dal/db"
	"time"
)

const TableNameUser = "t_user"

// User mapped from table <t_user>
type User struct {
	Id         int64     `gorm:"column:id;type:int(8);primaryKey;autoIncrement:true" json:"id"`
	UserId     int32     `gorm:"column:user_id;type:int(32);not null" json:"user_id"`
	Name       string    `gorm:"column:name;type:varchar(255)" json:"name"`
	Phone      string    `gorm:"column:phone;type:varchar(255)" json:"phone"`
	CreateTime time.Time `gorm:"column:create_time;type:datetime;not null" json:"create_time"`
	UpdateTime time.Time `gorm:"column:update_time;type:datetime;not null;default:CURRENT_TIMESTAMP" json:"update_time"`
}

// TableName User's table name
func (*User) TableName() string {
	return TableNameUser
}


// 获取列表
func (p *User) Options() (options []*selectfield.Option, Error error) {
	getList := []User{}
	err := db.Client.Find(&getList).Error
	if err != nil {
		return options, err
	}

	for _, v := range getList {
		option := &selectfield.Option{
			Label: fmt.Sprintf("%v%v", v.UserId, v.Name),
			Value: v.UserId,
		}
		options = append(options, option)
	}

	return options, nil
}
